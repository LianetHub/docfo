/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n//  init Fancybox\r\nif (typeof Fancybox !== \"undefined\" && Fancybox !== null) {\r\n    Fancybox.bind(\"[data-fancybox]\", {\r\n        dragToClose: false,\r\n        closeButton: false\r\n    });\r\n}\r\n\r\n$(function () {\r\n\r\n    // detect user OS\r\n    const isMobile = {\r\n        Android: () => /Android/i.test(navigator.userAgent),\r\n        BlackBerry: () => /BlackBerry/i.test(navigator.userAgent),\r\n        iOS: () => /iPhone|iPad|iPod/i.test(navigator.userAgent),\r\n        Opera: () => /Opera Mini/i.test(navigator.userAgent),\r\n        Windows: () => /IEMobile/i.test(navigator.userAgent),\r\n        any: function () {\r\n            return this.Android() || this.BlackBerry() || this.iOS() || this.Opera() || this.Windows();\r\n        },\r\n    };\r\n\r\n    function getNavigator() {\r\n        if (isMobile.any() || $(window).width() < 992) {\r\n            $('body').removeClass('_pc').addClass('_touch');\r\n        } else {\r\n            $('body').removeClass('_touch').addClass('_pc');\r\n        }\r\n    }\r\n\r\n    getNavigator();\r\n\r\n    $(window).on('resize', () => {\r\n        getNavigator();\r\n    });\r\n\r\n\r\n\r\n\r\n    // event handlers\r\n    $(document).on('click', (e) => {\r\n        const $target = $(e.target);\r\n\r\n        //  menu\r\n        if ($target.closest('.header__menu-btn').length) {\r\n            $('.header').toggleClass('open-menu');\r\n        }\r\n\r\n        if ($target.is('.wrapper') && $('.header').hasClass('open-menu')) {\r\n            $('.header').removeClass('open-menu');\r\n        }\r\n\r\n        // faq accordion\r\n        if ($target.closest('.faq__item').length) {\r\n            const $faqItem = $target.closest('.faq__item');\r\n            $faqItem.toggleClass('active');\r\n            $faqItem.find('.faq__item-answer').slideToggle()\r\n        }\r\n\r\n        // Открытие/закрытие списка локаций\r\n        if ($target.closest('.sign-lesson__location-selected').length) {\r\n            const $selectedBtn = $target.closest('.sign-lesson__location-selected');\r\n            const $locationList = $selectedBtn.siblings('.sign-lesson__location-list');\r\n\r\n            $selectedBtn.toggleClass('active');\r\n            $locationList.toggleClass('open');\r\n        }\r\n\r\n        // Закрытие списка при клике вне блока\r\n        if (!$target.closest('.sign-lesson__location').length) {\r\n            $('.sign-lesson__location-selected').removeClass('active');\r\n            $('.sign-lesson__location-list').removeClass('open');\r\n        }\r\n\r\n        // Выбор элемента из списка локаций\r\n        if ($target.closest('.sign-lesson__location-item').length) {\r\n            const $locationItem = $target.closest('.sign-lesson__location-item');\r\n            const $locationWrapper = $locationItem.closest('.sign-lesson__location');\r\n            const $locationSelected = $locationWrapper.find('.sign-lesson__location-selected');\r\n            const $locationList = $locationWrapper.find('.sign-lesson__location-list');\r\n            const $contentBlocks = $('.sign-lesson__content');\r\n\r\n            // Обновление активного элемента списка\r\n            $locationList.find('.sign-lesson__location-item').removeClass('active');\r\n            $locationItem.addClass('active');\r\n\r\n            // Обновление кнопки\r\n            $locationSelected.text($locationItem.text());\r\n            $locationSelected.removeClass('active');\r\n            $locationList.removeClass('open');\r\n\r\n            // Обновление контента\r\n            $contentBlocks.removeClass('active').eq($locationItem.index()).addClass('active');\r\n        }\r\n\r\n        // Открытие promo__info при клике на form__tooltip\r\n        if ($target.closest('.form__tooltip').length) {\r\n            const $promoForm = $target.closest('.promo__form');\r\n            const $promoInfo = $promoForm.siblings('.promo__info');\r\n\r\n            $promoForm.addClass('hidden');\r\n            $promoInfo.removeClass('hidden');\r\n        }\r\n\r\n        // Закрытие promo__info при клике на promo__info-close\r\n        if ($target.closest('.promo__info-close').length) {\r\n            const $promoInfo = $target.closest('.promo__info');\r\n            const $promoForm = $promoInfo.siblings('.promo__form');\r\n\r\n            $promoInfo.addClass('hidden');\r\n            $promoForm.removeClass('hidden');\r\n        }\r\n\r\n        // header location\r\n        if ($target.is('.header__location-btn')) {\r\n            $target.toggleClass('active');\r\n            $('.header__location-list').toggleClass('active');\r\n        }\r\n\r\n\r\n        if ($('body').hasClass('_touch')) {\r\n            if ($target.closest('.menu__link').length && $target.closest('.menu__item.has-children').length) {\r\n                e.preventDefault();\r\n                const $menuLink = $target.closest('.menu__link');\r\n                const $submenu = $menuLink.next('.submenu');\r\n\r\n                const isActive = $menuLink.hasClass('active');\r\n\r\n                $('.menu__link').removeClass('active');\r\n                $('.submenu').removeClass('open');\r\n\r\n                if (!isActive) {\r\n                    $menuLink.addClass('active');\r\n                    $submenu.addClass('open');\r\n                }\r\n            }\r\n        }\r\n\r\n        if ($target.closest('.submenu__close').length) {\r\n            $('.menu__link').removeClass('active');\r\n            $('.submenu').removeClass('open');\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n    //  sliders\r\n    if ($('.atmosphere__slider').length) {\r\n        new Swiper('.atmosphere__slider', {\r\n            spaceBetween: 10,\r\n            slidesPerView: 1.15,\r\n            navigation: {\r\n                prevEl: '.atmosphere__prev',\r\n                nextEl: '.atmosphere__next',\r\n            },\r\n            pagination: {\r\n                el: '.atmosphere__pagination',\r\n                clickable: true\r\n            },\r\n            breakpoints: {\r\n                797.98: {\r\n                    slidesPerView: 1,\r\n                    spaceBetween: 0\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    if ($('.languages__slider').length) {\r\n        new Swiper('.languages__slider', {\r\n            slidesPerView: \"auto\",\r\n            spaceBetween: 20,\r\n            watchOverflow: true,\r\n            pagination: {\r\n                clickable: true,\r\n                el: '.languages__pagination'\r\n            },\r\n            breakpoints: {\r\n                991.98: {\r\n                    spaceBetween: 19,\r\n                    slidesPerView: 5,\r\n                },\r\n                1199.98: {\r\n                    spaceBetween: 36,\r\n                    slidesPerView: 5,\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    if ($('.programms__slider').length) {\r\n        new Swiper('.programms__slider', {\r\n            slidesPerView: \"auto\",\r\n            spaceBetween: 20,\r\n            watchOverflow: true,\r\n            pagination: {\r\n                clickable: true,\r\n                el: '.programms__pagination'\r\n            },\r\n            breakpoints: {\r\n                991.98: {\r\n                    spaceBetween: 40,\r\n                    slidesPerView: 3,\r\n                },\r\n                1199.98: {\r\n                    spaceBetween: 72,\r\n                    slidesPerView: 3,\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    if ($('.prices__slider').length) {\r\n        $('.prices__slider').each(function (index, element) {\r\n            const $slider = $(element);\r\n            const $pagination = $slider.find('.prices__slider-pagination');\r\n\r\n            new Swiper($slider[0], {\r\n                slidesPerView: \"auto\",\r\n                watchOverflow: true,\r\n                pagination: {\r\n                    clickable: true,\r\n                    el: $pagination[0],\r\n                },\r\n            });\r\n        });\r\n    }\r\n\r\n    if ($('.why__body').length) {\r\n        getMobileSlider('.why__body', {\r\n            spaceBetween: 20,\r\n            slidesPerView: 'auto',\r\n            pagination: {\r\n                clickable: true,\r\n                el: '.why__pagination'\r\n            }\r\n        })\r\n    }\r\n\r\n    if ($('.best-teachers__slider').length) {\r\n        getMobileSlider('.best-teachers__slider', {\r\n            spaceBetween: 20,\r\n            slidesPerView: 'auto',\r\n            pagination: {\r\n                clickable: true,\r\n                el: '.best-teachers__pagination'\r\n            }\r\n        })\r\n    }\r\n\r\n    if ($('.info__slider').length) {\r\n        getMobileSlider('.info__slider', {\r\n            spaceBetween: 20,\r\n            slidesPerView: 'auto',\r\n            pagination: {\r\n                clickable: true,\r\n                el: '.info__slider-pagination'\r\n            }\r\n        })\r\n    }\r\n\r\n    if ($('.cards__slider').length) {\r\n        getMobileSlider('.cards__slider', {\r\n            spaceBetween: 10,\r\n            slidesPerView: 'auto',\r\n            pagination: {\r\n                clickable: true,\r\n                el: '.cards__slider-pagination'\r\n            }\r\n        })\r\n    }\r\n\r\n    if ($('.gallery__slider').length) {\r\n        new Swiper('.gallery__slider-content', {\r\n            spaceBetween: 10,\r\n            slidesPerView: 1,\r\n            navigation: {\r\n                prevEl: '.gallery__slider-prev',\r\n                nextEl: '.gallery__slider-next',\r\n            },\r\n            pagination: {\r\n                el: '.gallery__slider-pagination',\r\n                clickable: true\r\n            },\r\n            breakpoints: {\r\n                576.98: {\r\n                    spaceBetween: 0\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    if ($('.goals__slider').length) {\r\n        new Swiper('.goals__slider', {\r\n            spaceBetween: 20,\r\n            slidesPerView: \"auto\",\r\n            watchOverflow: true,\r\n            pagination: {\r\n                el: '.goals__pagination',\r\n                clickable: true\r\n            },\r\n            breakpoints: {\r\n                991.98: {\r\n                    spaceBetween: 20,\r\n                    slidesPerView: 4,\r\n                },\r\n                1199.98: {\r\n                    spaceBetween: 28,\r\n                    slidesPerView: 4,\r\n\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    if ($('.daily-routine__items').length) {\r\n        getMobileSlider('.daily-routine__items', {\r\n            slidesPerView: 'auto',\r\n            watchOverflow: true,\r\n            pagination: {\r\n                clickable: true,\r\n                el: '.daily-routine__pagination'\r\n            }\r\n        })\r\n    }\r\n\r\n    if ($('.popular__slider').length) {\r\n        new Swiper('.popular__slider', {\r\n            slidesPerView: 'auto',\r\n            spaceBetween: 60,\r\n            pagination: {\r\n                el: '.popular__slider-pagination',\r\n                clickable: true\r\n            },\r\n            breakpoints: {\r\n                767.98: {\r\n                    slidesPerView: 3,\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    function getMobileSlider(sliderName, options) {\r\n\r\n        let init = false;\r\n        let swiper = null;\r\n\r\n        function getSwiper() {\r\n            if (window.innerWidth <= 767.98) {\r\n                if (!init) {\r\n                    init = true;\r\n                    swiper = new Swiper(sliderName, options);\r\n                }\r\n            } else if (init) {\r\n                swiper.destroy();\r\n                swiper = null;\r\n                init = false;\r\n            }\r\n        }\r\n        getSwiper();\r\n        window.addEventListener(\"resize\", getSwiper);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // observer header scroll\r\n    const callback = (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n            $('.header').removeClass('scroll');\r\n        } else {\r\n            $('.header').addClass('scroll');\r\n        }\r\n    };\r\n\r\n    const headerObserver = new IntersectionObserver(callback);\r\n    headerObserver.observe($('.header')[0]);\r\n\r\n\r\n    // observer header height\r\n    function updateHeaderHeight() {\r\n        var headerHeight = $('.header__wrapper').outerHeight() / parseFloat($('html').css('font-size'));\r\n\r\n        $('body').css('--header-height', headerHeight + 'rem');\r\n    }\r\n\r\n    updateHeaderHeight();\r\n\r\n    $(window).on('resize', function () {\r\n        updateHeaderHeight();\r\n    });\r\n\r\n\r\n\r\n\r\n    // tabs\r\n    // class Tabs {\r\n    //     constructor(wrapper) {\r\n    //         this.$wrapper = $(wrapper);\r\n    //         this.$tabButtons = this.$wrapper.find('.tabs__item');\r\n    //         this.$tabContents = this.$wrapper.find('.tab-content');\r\n    //         this.init();\r\n    //     }\r\n\r\n    //     init() {\r\n    //         this.$tabButtons.each((index, button) => {\r\n    //             $(button).on('click', () => this.activateTab(index));\r\n    //         });\r\n    //     }\r\n\r\n    //     activateTab(index) {\r\n    //         this.$tabButtons.removeClass('active');\r\n    //         this.$tabContents.removeClass('active');\r\n\r\n    //         this.$tabButtons.eq(index).addClass('active');\r\n    //         this.$tabContents.eq(index).addClass('active');\r\n    //     }\r\n    // }\r\n\r\n    // $('.tabs-wrapper').each((_, wrapper) => new Tabs(wrapper));\r\n\r\n\r\n\r\n    // Custom Select\r\n\r\n    class CustomSelect {\r\n\r\n        static openDropdown = null\r\n\r\n        constructor(selectElement) {\r\n            this.$select = $(selectElement);\r\n            this.defaultText = this.$select.find('option:selected').text();\r\n            this.selectName = this.$select.attr('name');\r\n            this.$options = this.$select.find('option');\r\n            this.icon = this.$select.data('icon');\r\n            this.title = this.$select.data('title');\r\n            this.$dropdown = null;\r\n            this.initialState = {};\r\n            this.init();\r\n        }\r\n\r\n        init() {\r\n            if (!this.$select.length) return;\r\n            this.saveInitialState();\r\n            this.$select.addClass('hidden');\r\n            this.renderDropdown();\r\n            this.setupEvents();\r\n        }\r\n\r\n        saveInitialState() {\r\n            const $selectedOption = this.$select.find('option:selected');\r\n            this.initialState = {\r\n                selectedText: $selectedOption.text(),\r\n                selectedValue: $selectedOption.val(),\r\n            };\r\n        }\r\n\r\n        renderDropdown() {\r\n            const isDisabled = this.$select.is(':disabled')\r\n\r\n            let buttonTemplate = '';\r\n\r\n            if (this.icon) {\r\n                buttonTemplate = `\r\n                    <button type=\"button\" class=\"dropdown__button icon-chevron\" \r\n                        aria-expanded=\"false\" \r\n                        aria-haspopup=\"true\" \r\n                        ${isDisabled ? 'disabled' : ''}>\r\n                        <span class=\"dropdown__button-icon ${this.icon}\"></span>\r\n                        <span class=\"dropdown__button-text\">${this.defaultText}</span>\r\n                    </button>\r\n                `;\r\n            } else if (this.title) {\r\n\r\n                buttonTemplate = `\r\n                    <button type=\"button\" class=\"dropdown__button icon-chevron\" \r\n                        aria-expanded=\"false\" \r\n                        aria-haspopup=\"true\" \r\n                        ${isDisabled ? 'disabled' : ''}>\r\n                        <span class=\"dropdown__button-column\">\r\n                            <span class=\"dropdown__button-caption\">${this.title}</span>\r\n                            <span class=\"dropdown__button-text\">${this.defaultText}</span>\r\n                        </span>\r\n                    </button>\r\n                `;\r\n            } else {\r\n                buttonTemplate = `\r\n                    <button type=\"button\" class=\"dropdown__button icon-chevron\" \r\n                        aria-expanded=\"false\" \r\n                        aria-haspopup=\"true\" \r\n                        ${isDisabled ? 'disabled' : ''}>\r\n                        <span class=\"dropdown__button-text\">${this.defaultText}</span>\r\n                    </button>\r\n                `;\r\n            }\r\n\r\n            this.$dropdown = $(`\r\n                <div class=\"dropdown\">\r\n                    ${buttonTemplate}\r\n                    <div class=\"dropdown__body\" aria-hidden=\"true\">\r\n                        <ul class=\"dropdown__list\" role=\"listbox\"></ul>\r\n                    </div>\r\n                </div>\r\n            `);\r\n\r\n            const $list = this.$dropdown.find('.dropdown__list');\r\n            this.$options.each((index, option) => {\r\n                const $option = $(option);\r\n                const value = $option.attr('value');\r\n                const text = $option.text();\r\n                const isSelected = $option.is(':selected');\r\n                const isDisabled = $option.is(':disabled');\r\n\r\n                $list.append(`\r\n                    <li role=\"option\"\r\n                        data-value=\"${value}\"\r\n                        aria-checked=\"${isSelected}\"\r\n                        class=\"dropdown__list-item${isSelected ? ' selected' : ''}${isDisabled ? ' disabled' : ''}\" \r\n                        ${isDisabled ? 'aria-disabled=\"true\"' : ''}>\r\n                        ${text}\r\n                    </li>\r\n                `);\r\n            });\r\n\r\n            this.$select.after(this.$dropdown);\r\n\r\n\r\n        }\r\n\r\n        setupEvents() {\r\n            this.$dropdown.find('.dropdown__button').on('click', (event) => {\r\n                event.stopPropagation();\r\n                const isOpen = this.$dropdown.hasClass('visible');\r\n                this.toggleDropdown(!isOpen);\r\n            });\r\n\r\n            this.$dropdown.find('.dropdown__list-item').on('click', (event) => {\r\n                event.stopPropagation();\r\n                const $item = $(event.currentTarget);\r\n\r\n                if (!$item.hasClass('disabled')) {\r\n                    this.selectOption($item);\r\n                }\r\n            });\r\n\r\n            $(document).on('click', () => this.closeDropdown());\r\n            $(document).on('keydown', (event) => {\r\n                if (event.key === 'Escape') this.closeDropdown();\r\n            });\r\n\r\n            this.$select.closest('form').on('reset', () => this.restoreInitialState());\r\n\r\n            const observerDisabled = new MutationObserver(() => {\r\n                const isSelectDisabled = this.$select.is(':disabled');\r\n                const $button = this.$dropdown.find('.dropdown__button');\r\n\r\n                if (isSelectDisabled) {\r\n                    $button.prop('disabled', true);\r\n                } else {\r\n                    $button.prop('disabled', false);\r\n                }\r\n            });\r\n\r\n            observerDisabled.observe(this.$select[0], {\r\n                attributes: true,\r\n                attributeFilter: ['disabled']\r\n            });\r\n\r\n            const observerSelected = new MutationObserver((mutations) => {\r\n                mutations.forEach((mutation) => {\r\n                    if (mutation.type === 'attributes' && mutation.attributeName === 'disabled') {\r\n                        const $option = $(mutation.target);\r\n                        const value = $option.attr('value');\r\n                        const isDisabled = $option.is(':disabled');\r\n                        const $item = this.$dropdown.find(`.dropdown__list-item[data-value=\"${value}\"]`);\r\n\r\n                        $item.toggleClass('disabled', isDisabled);\r\n                        if (isDisabled) {\r\n                            $item.attr('aria-disabled', 'true');\r\n                        } else {\r\n                            $item.removeAttr('aria-disabled');\r\n                        }\r\n                    }\r\n\r\n                    if (mutation.type === 'attributes' && mutation.attributeName === 'selected') {\r\n                        this.syncSelectedOption();\r\n                    }\r\n                });\r\n            });\r\n\r\n            observerSelected.observe(this.$select[0], {\r\n                childList: true,\r\n                subtree: true,\r\n                attributes: true,\r\n                attributeFilter: ['selected', 'disabled']\r\n            });\r\n        }\r\n\r\n        toggleDropdown(isOpen) {\r\n            if (isOpen && CustomSelect.openDropdown && CustomSelect.openDropdown !== this) {\r\n                CustomSelect.openDropdown.closeDropdown();\r\n            }\r\n\r\n            const $body = this.$dropdown.find('.dropdown__body');\r\n            const $list = this.$dropdown.find('.dropdown__list');\r\n            const hasScroll = $list[0].scrollHeight > $list[0].clientHeight;\r\n\r\n            this.$dropdown.toggleClass('visible', isOpen);\r\n            this.$dropdown.find('.dropdown__button').attr('aria-expanded', isOpen);\r\n            $body.attr('aria-hidden', !isOpen);\r\n\r\n            if (isOpen) {\r\n                CustomSelect.openDropdown = this;\r\n                this.$dropdown.removeClass('dropdown-top');\r\n                const dropdownRect = $body[0].getBoundingClientRect();\r\n                const viewportHeight = window.innerHeight;\r\n                if (dropdownRect.bottom > viewportHeight) {\r\n                    this.$dropdown.addClass('dropdown-top');\r\n                }\r\n\r\n                $list.toggleClass('has-scroll', hasScroll);\r\n            } else {\r\n                if (CustomSelect.openDropdown === this) {\r\n                    CustomSelect.openDropdown = null;\r\n                }\r\n            }\r\n        }\r\n\r\n        closeDropdown() {\r\n            this.toggleDropdown(false);\r\n        }\r\n\r\n        selectOption($item) {\r\n            const value = $item.data('value');\r\n            const text = $item.text();\r\n\r\n            this.$dropdown.find('.dropdown__list-item').removeClass('selected').attr('aria-checked', 'false');\r\n            $item.addClass('selected').attr('aria-checked', 'true');\r\n\r\n            this.$dropdown.find('.dropdown__button-text').text(text);\r\n            this.$select.val(value).trigger('change');\r\n            this.closeDropdown();\r\n        }\r\n\r\n        restoreInitialState() {\r\n            const state = this.initialState;\r\n            this.$select.val(state.selectedValue).trigger('change');\r\n            this.$dropdown.find('.dropdown__list-item').removeClass('selected').attr('aria-checked', 'false');\r\n            this.$dropdown\r\n                .find(`.dropdown__list-item[data-value=\"${state.selectedValue}\"]`)\r\n                .addClass('selected')\r\n                .attr('aria-checked', 'true');\r\n            this.$dropdown.find('.dropdown__button-text').text(state.selectedText);\r\n        }\r\n\r\n        syncSelectedOption() {\r\n            const $selectedOption = this.$select.find('option:selected');\r\n            const selectedValue = $selectedOption.val();\r\n            const selectedText = $selectedOption.text();\r\n\r\n\r\n            this.$dropdown.find('.dropdown__list-item').removeClass('selected').attr('aria-checked', 'false');\r\n            this.$dropdown\r\n                .find(`.dropdown__list-item[data-value=\"${selectedValue}\"]`)\r\n                .addClass('selected')\r\n                .attr('aria-checked', 'true');\r\n            this.$dropdown.find('.dropdown__button-text').text(selectedText);\r\n        }\r\n    }\r\n\r\n    $('.select').each((index, element) => {\r\n        new CustomSelect(element);\r\n    });\r\n\r\n\r\n    // international phone input\r\n    if ($('.phone-input').length > 0) {\r\n        $('.phone-input').each(function (idx, input) {\r\n\r\n            let inputInt = intlTelInput(input, {\r\n                utilsScript: \"https://cdn.jsdelivr.net/npm/intl-tel-input@18.2.1/build/js/utils.js\",\r\n                initialCountry: \"ru\",\r\n                separateDialCode: true,\r\n            });\r\n\r\n            let pattern = getPattern();\r\n\r\n\r\n            input.addEventListener(\"countrychange\", function () {\r\n                pattern = getPattern();\r\n                $(input).formatter().resetPattern(pattern);\r\n            });\r\n\r\n            $(input).formatter({\r\n                'pattern': pattern\r\n            });\r\n\r\n            function getPattern() {\r\n                let pattern;\r\n                if (inputInt.j == 'ru') {\r\n                    pattern = '({{999}}) {{999}}-{{99}}-{{99}}';\r\n                } else {\r\n                    pattern = '{{9999999999999999999999}}';\r\n                }\r\n\r\n                return pattern;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n})\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://tlm-gulp/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;